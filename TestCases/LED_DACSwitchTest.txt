#include <msp430.h>

unsigned int DAC_data = 0;

int TestDACSwitch(void)
{
    WDTCTL = WDTPW + WDTHOLD;                 // Stop watch dog timer

	P5DIR  |= BIT0 | BIT1;
	P5SEL0 |= BIT0 | BIT1;
	
	
	// It runs with 1 MHz, but while testing it showed that a us takes 20% more time
	TB2CCR0 = 781 -1; 		// Every 1 ms the LED is already on for 110 us and will continue for another 110 us
	TB2CCTL1 |= OUTMOD_2; 	//TB2CCR1 toggle/set
	TB2CCR1 = 86 -1; 		//0..110 us , 1.89ms ... 2ms
	TB2CCTL2 |= OUTMOD_6; 	//TBCCR2 reset/set
	TB2CCR2 = 695 -1; 		//0.890ms - 1.11 ms
	TB2CTL  |= TBSSEL__SMCLK | MC_3; // SMCLK, Up-Down-Mode
	
	

    P3SEL0 |= BIT1 | BIT5;
    P3SEL1 |= BIT1 | BIT5;

    PMMCTL0_H = PMMPW_H;                      // Unlock the PMM registers
    PMMCTL2 = INTREFEN | REFVSEL_2;           // Enable internal 2.5V reference
    while(!(PMMCTL2 & REFGENRDY));            // Poll till internal reference settles

    SAC2DAC |= DACSREF_1  | DACEN;
    SAC2DAT = DAC_data;

    SAC3DAC |= DACSREF_1  | DACEN;
    SAC3DAT = DAC_data;


    SAC2OA  |= PMUXEN_1 | NMUXEN_1 | NSEL_1 | PSEL_1; //All Negative and Positives Inputs are Connected; 12 Bits reference ADC as pos Input, PGA Source is ground for neg Input, Gain is 1
    SAC2OA  |= OAPM; //Low Speed and Low Power. We barely need to change this value
    SAC2PGA |= MSEL_1; // Buffer Mode
    SAC2OA  |= SACEN | OAEN; //Enable


    SAC3OA  |= PMUXEN_1 | NMUXEN_1 | NSEL_1 | PSEL_1; //All Negative and Positives Inputs are Connected; 12 Bits reference ADC as pos Input, PGA Source is ground for neg Input, Gain is 1
    SAC3OA  |= OAPM; //Low Speed and Low Power. We barely need to change this value
    SAC3PGA |= MSEL_1; // Buffer Mode
    SAC3OA  |= SACEN | OAEN; //Enable


    PM5CTL0 &= ~LOCKLPM5;                     // Disable the GPIO power-on default high-impedance mode
                                               // to activate previously configured port settings

    while(1)
    {
        SAC2DAT += 80;
        SAC2DAT %= 4000;

        SAC3DAT += 50;
        SAC3DAT %= 2000;

        __delay_cycles(500000);

    }


}
